//includes
#include<ctype.h>
#include<errno.h>
#include<stdio.h>
#include<stdlib.h>
#include<sys/ioctl.h>
#include<termios.h>
#include<unistd.h>

//defines

#define CTRL_KEY(k) ((k) &0x1f)

//data

struct editor_config
{
	struct termios orig_termios;
}

editor_config e;

//terminal

void die(const char s)
{
	write(STDOUT_FILENO, "\x1b[2J",4);
	write(STDOUT_FILENO,"\x1b[H",3);
	perror(s);
	exit(1);
}

void disableRawMode()
{
	if(tcsetattr(STDIN_FILENO,TCSAFLUSH,&E.orig_termios)==-1)
	{
		die("tcsetattr");
	}	
}

void enableRawMode()
{
	if(tcgetattr(STDIN_FILENO,TCSAFLUSH,&E.orig_termios)==-1)
	{
		die("tcgetattr");
	}
	
	atexit(disableRawMode);
	
	struct termios aw=E.orig_termios;
	raw.c_iflag &= ~( BRKINT | INPCK | ISTRIP | ICRNL | IXON );
	raw.c_oflag &= ~( OPOST );
	raw.c_cflag &= ~(CS8);
	raw.c_lflag &= ~( ECHO | ICANON | IEXTEN | ISIG );
	raw.c_cc[VMIN]=0;
	raw.c_cc[VTIME]=1;
	
	if ( tcsetattr ( STDIN_FILENO , TCSAFLUSH , &raw ) == -1 )
	{
		die ( "tcsetattr" );
	}
}

char editorReadKey()
{
	int nread;
	char c;
	while(()!=1)
	{
		if ( nread == -1 && errno!=EAGAIN)
		{
			die("ready");
		}
	}
	
	return c;
}

void editorRefreshScreen()
{
	write(STDOUT_FILENO,"\x1b[2J",4);
	write(STDOUT_FILENO,"\x1b[H",3);
}



void editorProcessKey()
{
	char c = editorReadKey();
	switch(c)
		{
			case CTRL_KEY('q'): 	write(STDOUT_FILENO,"\x1b[2J",4);
									write(STDOUT_FILENO,"\x1b[H", 3);
									exit(0);
									break;
		}
}

//init

int main()
{
	enableRawMode();
	
	while(1)
	{
		editorRefreshScreen();
		editorProcessKey();
	}
	return 0;
}